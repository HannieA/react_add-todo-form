{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","utils.tsx","components/TodoForm/TodoForm.tsx","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","isCompleted","classNames","TodoList","todos","map","username","getUser","userId","usersFromServer","find","TodoForm","addTodo","users","useState","setTitle","setUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","onSubmit","event","preventDefault","trim","htmlFor","type","placeholder","value","onChange","target","disabled","todosFromServer","App","updatedTodo","setUpdatedTodo","newTodo","Math","max","item","prevTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c8792af1.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, completed, user,\n  } = todo;\n  const isCompleted = classNames('TodoInfo', {\n    'TodoInfo--completed': completed,\n  });\n\n  return (\n    <article data-id={id} className={isCompleted}>\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} key={id} />}\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from './api/users';\nimport { User } from './types/User';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n","import React, { useState } from 'react';\n\nimport { getUser } from '../../utils';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  addTodo: (todo: Todo) => void;\n  users: User[];\n}\n\nexport const TodoForm: React.FC<Props> = ({ addTodo, users }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleChangeUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const restart = () => {\n    setTitle('');\n    setUserId(0);\n    setHasUserError(false);\n    setHasTitleError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (userId === 0) {\n      setHasUserError(true);\n    }\n\n    if (!title || !title.trim()) {\n      setHasTitleError(true);\n    }\n\n    if (title.trim() && userId) {\n      addTodo({\n        id: 0,\n        title: title.trim(),\n        completed: false,\n        userId,\n        user: getUser(userId),\n      });\n\n      restart();\n    }\n  };\n\n  return (\n    <form action=\"/api/todos\" method=\"POST\" onSubmit={handleSubmit}>\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"titleInput\">\n          Title:\n        </label>\n        <div className=\"control\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleChangeTitle}\n          />\n        </div>\n        {hasTitleError && (\n          <p className=\"help is-danger\">Please enter a title</p>\n        )}\n      </div>\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"selectUser\">\n          User:\n        </label>\n        <div className=\"control\">\n          <div className=\"select\" id=\"selectUser\">\n            <select\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={handleChangeUser}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n              {users.map((user) => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          {hasUserError && (\n            <p className=\"help is-danger\">Please choose a user</p>\n          )}\n        </div>\n      </div>\n\n      <div className=\"buttons\">\n        <button className=\"button is-link\" type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </div>\n    </form>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\n\nimport './App.scss';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\nimport { getUser } from './utils';\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\n\nconst todos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [updatedTodo, setUpdatedTodo] = useState(todos);\n\n  const addNewTodo = (todo: Todo) => {\n    const newId = () => {\n      const maxId: number = Math.max(...todosFromServer.map((item) => item.id));\n\n      return maxId + 1;\n    };\n\n    const newTodo = {\n      ...todo,\n      id: newId(),\n    };\n\n    setUpdatedTodo(prevTodo => [...prevTodo, newTodo]);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">Add todo form</h1>\n      <TodoForm addTodo={addNewTodo} users={usersFromServer} />\n      <TodoList todos={updatedTodo} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}